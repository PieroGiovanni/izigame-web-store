// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  brandId      Int?          @default(1)
  brand        Brand?        @relation(fields: [brandId], references: [id])
  categoryId   Int
  category     Category      @relation(fields: [categoryId], references: [id])
  productItems ProductItem[]
  tags         String[]
  updatedAt    DateTime      @default(now()) @updatedAt
  createdAt    DateTime      @default(now())
}

model ProductItem {
  id            Int            @id @default(autoincrement())
  productId     Int
  product       Product        @relation(fields: [productId], references: [id])
  originalPrice Decimal
  salePrice     Decimal
  isFeatured    Boolean        @default(false)
  productImages ProductImage[]
  colorId       Int
  color         Color          @relation(fields: [colorId], references: [id])
  sizeId        Int
  size          Size           @relation(fields: [sizeId], references: [id])
  updatedAt     DateTime       @default(now()) @updatedAt
  createdAt     DateTime       @default(now())
}

model Category {
  id               Int        @id @default(autoincrement())
  name             String
  description      String?
  parentCategoryId Int?       @unique
  parentCategory   Category?  @relation("ParentChildCategory", fields: [parentCategoryId], references: [id])
  childCategories  Category[] @relation("ParentChildCategory")
  products         Product[]
  sizes            Size[]
  updatedAt        DateTime   @default(now()) @updatedAt
  createdAt        DateTime   @default(now())
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[]
  updatedAt   DateTime  @default(now()) @updatedAt
  createdAt   DateTime  @default(now())
}

model Size {
  id           Int           @id @default(autoincrement())
  name         String
  abbreviation String
  categoryId   Int
  category     Category      @relation(fields: [categoryId], references: [id])
  productItems ProductItem[]
  updatedAt    DateTime      @default(now()) @updatedAt
  createdAt    DateTime      @default(now())
}

model Color {
  id           Int           @id @default(autoincrement())
  name         String
  hexColor     String
  productItems ProductItem[]
  updatedAt    DateTime      @default(now()) @updatedAt
  createdAt    DateTime      @default(now())
}

model ProductImage {
  id            Int         @id @default(autoincrement())
  productItemId Int
  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  url           String
  updatedAt     DateTime    @default(now()) @updatedAt
  createdAt     DateTime    @default(now())
}
